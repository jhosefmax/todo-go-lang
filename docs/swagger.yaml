basePath: /
definitions:
  main.Todo:
    description: Todo item
    properties:
      completed:
        description: Whether the todo item has been completed
        example: false
        type: boolean
      created_at:
        description: When the todo item was created
        type: string
      description:
        description: A description of what needs to be done
        example: Get milk and bread
        type: string
      id:
        description: The unique identifier for the todo item
        example: 123e4567-e89b-12d3-a456-426614174000
        type: string
      title:
        description: The title of the todo item
        example: Buy groceries
        type: string
      updated_at:
        description: When the todo item was last updated
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a simple TODO list API using Supabase
  title: Todo API
  version: "1.0"
paths:
  /todos:
    get:
      consumes:
      - application/json
      description: Get all todo items
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.Todo'
            type: array
      summary: Get all todos
      tags:
      - todos
    post:
      consumes:
      - application/json
      description: Create a new todo item
      parameters:
      - description: Todo object
        in: body
        name: todo
        required: true
        schema:
          $ref: '#/definitions/main.Todo'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/main.Todo'
      summary: Create a new todo
      tags:
      - todos
  /todos/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a todo item by ID
      parameters:
      - description: Todo ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      summary: Delete a todo
      tags:
      - todos
    put:
      consumes:
      - application/json
      description: Update a todo item by ID
      parameters:
      - description: Todo ID
        in: path
        name: id
        required: true
        type: string
      - description: Todo object
        in: body
        name: todo
        required: true
        schema:
          $ref: '#/definitions/main.Todo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.Todo'
      summary: Update a todo
      tags:
      - todos
swagger: "2.0"
